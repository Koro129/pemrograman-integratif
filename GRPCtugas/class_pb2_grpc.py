# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import class_pb2 as class__pb2


class ClassServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllClasses = channel.unary_unary(
                '/mypackage.ClassService/GetAllClasses',
                request_serializer=class__pb2.Empty.SerializeToString,
                response_deserializer=class__pb2.AllClasses.FromString,
                )
        self.AddClass = channel.unary_unary(
                '/mypackage.ClassService/AddClass',
                request_serializer=class__pb2.Class.SerializeToString,
                response_deserializer=class__pb2.ClassID.FromString,
                )
        self.EditClass = channel.unary_unary(
                '/mypackage.ClassService/EditClass',
                request_serializer=class__pb2.Class.SerializeToString,
                response_deserializer=class__pb2.ClassID.FromString,
                )
        self.RemoveClass = channel.unary_unary(
                '/mypackage.ClassService/RemoveClass',
                request_serializer=class__pb2.ClassID.SerializeToString,
                response_deserializer=class__pb2.Empty.FromString,
                )


class ClassServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllClasses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddClass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditClass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveClass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClassServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllClasses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllClasses,
                    request_deserializer=class__pb2.Empty.FromString,
                    response_serializer=class__pb2.AllClasses.SerializeToString,
            ),
            'AddClass': grpc.unary_unary_rpc_method_handler(
                    servicer.AddClass,
                    request_deserializer=class__pb2.Class.FromString,
                    response_serializer=class__pb2.ClassID.SerializeToString,
            ),
            'EditClass': grpc.unary_unary_rpc_method_handler(
                    servicer.EditClass,
                    request_deserializer=class__pb2.Class.FromString,
                    response_serializer=class__pb2.ClassID.SerializeToString,
            ),
            'RemoveClass': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveClass,
                    request_deserializer=class__pb2.ClassID.FromString,
                    response_serializer=class__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mypackage.ClassService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClassService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllClasses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mypackage.ClassService/GetAllClasses',
            class__pb2.Empty.SerializeToString,
            class__pb2.AllClasses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mypackage.ClassService/AddClass',
            class__pb2.Class.SerializeToString,
            class__pb2.ClassID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mypackage.ClassService/EditClass',
            class__pb2.Class.SerializeToString,
            class__pb2.ClassID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mypackage.ClassService/RemoveClass',
            class__pb2.ClassID.SerializeToString,
            class__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
